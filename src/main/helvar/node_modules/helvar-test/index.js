#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const redis = require('redis');
const Ajv = require('ajv');

const filePath = process.argv[2];
const validate = (new Ajv()).compile(
  JSON.parse(fs.readFileSync(__dirname + '/schema.json', 'utf8')));

let msg = null;

if (!filePath) {
  console.error(`Usage: ${process.argv[1]} filePath`);
  process.exit(1);
}

if (!path.isAbsolute(filePath)) {
    console.error(`Error: '${filePath}' is not an absolute path`);
    process.exit(2);
}

try {
  msg = JSON.parse(fs.readFileSync(process.argv[2], 'utf8'))
} catch (error) {
  console.error(`Error: '${filePath}' is not found or not a json file`);
  process.exit(3);
}

// store to redis Database
redisClient = redis.createClient();

redisClient.on('error', (error) => {
  console.error('Error:', error);
  process.exit(4);
});

redisClient.on('ready', () => {
  if (!validate(msg)) {
    console.error('Error:', validate.errors);
    process.exit(5);
  }

  msg.payload.forEach(item => {
    redisClient.hset('helvar', item.id, item.info);
  });
  setTimeout(() => redisClient.quit(), 100);
});
